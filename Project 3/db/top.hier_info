|top
ADC_CLK_10 => ADC_CLK_10.IN1
SW[0] => SW[0].IN1
SW[1] => always1.IN0
SW[1] => always2.IN0
SW[1] => always2.IN0
SW[1] => always2.IN0
SW[1] => always2.IN0
SW[1] => always2.IN0
SW[2] => always1.IN1
SW[2] => always2.IN1
SW[2] => always2.IN1
SW[2] => always2.IN1
SW[2] => always2.IN1
SW[2] => always2.IN0
SW[2] => always2.IN1
SW[2] => always2.IN1
SW[2] => always2.IN1
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => KEY[0].IN1
KEY[1] => KEY[1].IN1
LEDR[0] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= LEDR[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= LEDR[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= blink:B0.hex
HEX0[1] <= blink:B0.hex
HEX0[2] <= blink:B0.hex
HEX0[3] <= blink:B0.hex
HEX0[4] <= blink:B0.hex
HEX0[5] <= blink:B0.hex
HEX0[6] <= blink:B0.hex
HEX0[7] <= blink:B0.hex


|top|clockDivider:C0
clock_in => clock_divider[0].CLK
clock_in => clock_divider[1].CLK
clock_in => clock_divider[2].CLK
clock_in => clock_divider[3].CLK
clock_in => clock_divider[4].CLK
clock_in => clock_divider[5].CLK
clock_in => clock_divider[6].CLK
clock_in => clock_divider[7].CLK
clock_in => clock_divider[8].CLK
clock_in => clock_divider[9].CLK
clock_in => clock_divider[10].CLK
clock_in => clock_divider[11].CLK
clock_in => clock_divider[12].CLK
clock_in => clock_divider[13].CLK
clock_in => clock_divider[14].CLK
clock_in => clock_divider[15].CLK
clock_in => clock_divider[16].CLK
clock_in => clock_divider[17].CLK
clock_in => clock_divider[18].CLK
clock_in => clock_divider[19].CLK
clock_in => clock_divider[20].CLK
clock_in => clock_divider[21].CLK
clock_in => clock_divider[22].CLK
clock_in => clock_out~reg0.CLK
reset_n => clock_divider[0].ACLR
reset_n => clock_divider[1].ACLR
reset_n => clock_divider[2].ACLR
reset_n => clock_divider[3].ACLR
reset_n => clock_divider[4].ACLR
reset_n => clock_divider[5].ACLR
reset_n => clock_divider[6].ACLR
reset_n => clock_divider[7].ACLR
reset_n => clock_divider[8].ACLR
reset_n => clock_divider[9].ACLR
reset_n => clock_divider[10].ACLR
reset_n => clock_divider[11].ACLR
reset_n => clock_divider[12].ACLR
reset_n => clock_divider[13].ACLR
reset_n => clock_divider[14].ACLR
reset_n => clock_divider[15].ACLR
reset_n => clock_divider[16].ACLR
reset_n => clock_divider[17].ACLR
reset_n => clock_divider[18].ACLR
reset_n => clock_divider[19].ACLR
reset_n => clock_divider[20].ACLR
reset_n => clock_divider[21].ACLR
reset_n => clock_divider[22].ACLR
reset_n => clock_out~reg0.ACLR
divide_by[0] => Add0.IN64
divide_by[1] => Add0.IN63
divide_by[2] => Add0.IN62
divide_by[3] => Add0.IN61
divide_by[4] => Add0.IN60
divide_by[5] => Add0.IN59
divide_by[6] => Add0.IN58
divide_by[7] => Add0.IN57
divide_by[8] => Add0.IN56
divide_by[9] => Add0.IN55
divide_by[10] => Add0.IN54
divide_by[11] => Add0.IN53
divide_by[12] => Add0.IN52
divide_by[13] => Add0.IN51
divide_by[14] => Add0.IN50
divide_by[15] => Add0.IN49
divide_by[16] => Add0.IN48
divide_by[17] => Add0.IN47
divide_by[18] => Add0.IN46
divide_by[19] => Add0.IN45
divide_by[20] => Add0.IN44
divide_by[21] => Add0.IN43
divide_by[22] => Add0.IN42
divide_by[23] => Add0.IN41
divide_by[24] => Add0.IN40
divide_by[25] => Add0.IN39
divide_by[26] => Add0.IN38
divide_by[27] => Add0.IN37
divide_by[28] => Add0.IN36
divide_by[29] => Add0.IN35
divide_by[30] => Add0.IN34
divide_by[31] => Add0.IN33
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|blink:B0
clock => blinkState[0].CLK
clock => blinkState[1].CLK
hazards => ~NO_FANOUT~
reset_n => blinkState[0].ACLR
reset_n => blinkState[1].ACLR
turnChange => ~NO_FANOUT~
rightLEDs[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
rightLEDs[1] <= blinkState[1].DB_MAX_OUTPUT_PORT_TYPE
rightLEDs[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
leftLEDs[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
leftLEDs[1] <= blinkState[1].DB_MAX_OUTPUT_PORT_TYPE
leftLEDs[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
hex[0] <= sevenSeg:H0.seg
hex[1] <= sevenSeg:H0.seg
hex[2] <= sevenSeg:H0.seg
hex[3] <= sevenSeg:H0.seg
hex[4] <= sevenSeg:H0.seg
hex[5] <= sevenSeg:H0.seg
hex[6] <= sevenSeg:H0.seg
hex[7] <= sevenSeg:H0.seg


|top|blink:B0|sevenSeg:H0
val[0] => Decoder0.IN1
val[0] => seg[4].DATAIN
val[1] => Decoder0.IN0
val[1] => seg[6].DATAIN
seg[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= <GND>
seg[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= val[0].DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= val[1].DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>


