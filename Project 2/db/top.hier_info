|top
ADC_CLK_10 => ADC_CLK_10.IN1
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => SW[9].IN1
KEY[0] => KEY[0].IN3
KEY[1] => divide_by[0].ACLR
KEY[1] => divide_by[1].ACLR
KEY[1] => divide_by[2].ACLR
KEY[1] => divide_by[3].ACLR
KEY[1] => divide_by[4].ACLR
KEY[1] => divide_by[5].ACLR
KEY[1] => divide_by[6].PRESET
KEY[1] => divide_by[7].ACLR
KEY[1] => divide_by[8].ACLR
KEY[1] => divide_by[9].PRESET
KEY[1] => divide_by[10].ACLR
KEY[1] => divide_by[11].ACLR
KEY[1] => divide_by[12].ACLR
KEY[1] => divide_by[13].ACLR
KEY[1] => divide_by[14].PRESET
KEY[1] => divide_by[15].ACLR
KEY[1] => divide_by[16].PRESET
KEY[1] => divide_by[17].PRESET
KEY[1] => divide_by[18].PRESET
KEY[1] => divide_by[19].PRESET
KEY[1] => divide_by[20].ACLR
KEY[1] => divide_by[21].ACLR
KEY[1] => divide_by[22].ACLR
KEY[1] => divide_by[23].ACLR
KEY[1] => divide_by[24].ACLR
KEY[1] => divide_by[25].ACLR
KEY[1] => divide_by[26].ACLR
KEY[1] => divide_by[27].ACLR
KEY[1] => divide_by[28].ACLR
KEY[1] => divide_by[29].ACLR
KEY[1] => divide_by[30].ACLR
KEY[1] => divide_by[31].ACLR
HEX0[0] <= sevenSeg:H0.seg
HEX0[1] <= sevenSeg:H0.seg
HEX0[2] <= sevenSeg:H0.seg
HEX0[3] <= sevenSeg:H0.seg
HEX0[4] <= sevenSeg:H0.seg
HEX0[5] <= sevenSeg:H0.seg
HEX0[6] <= sevenSeg:H0.seg
HEX0[7] <= sevenSeg:H0.seg
HEX1[0] <= sevenSeg:H1.seg
HEX1[1] <= sevenSeg:H1.seg
HEX1[2] <= sevenSeg:H1.seg
HEX1[3] <= sevenSeg:H1.seg
HEX1[4] <= sevenSeg:H1.seg
HEX1[5] <= sevenSeg:H1.seg
HEX1[6] <= sevenSeg:H1.seg
HEX1[7] <= sevenSeg:H1.seg
HEX2[0] <= sevenSeg:H2.seg
HEX2[1] <= sevenSeg:H2.seg
HEX2[2] <= sevenSeg:H2.seg
HEX2[3] <= sevenSeg:H2.seg
HEX2[4] <= sevenSeg:H2.seg
HEX2[5] <= sevenSeg:H2.seg
HEX2[6] <= sevenSeg:H2.seg
HEX2[7] <= sevenSeg:H2.seg
HEX4[0] <= sevenSeg:H4.seg
HEX4[1] <= sevenSeg:H4.seg
HEX4[2] <= sevenSeg:H4.seg
HEX4[3] <= sevenSeg:H4.seg
HEX4[4] <= sevenSeg:H4.seg
HEX4[5] <= sevenSeg:H4.seg
HEX4[6] <= sevenSeg:H4.seg
HEX4[7] <= sevenSeg:H4.seg
HEX5[0] <= sevenSeg:H5.seg
HEX5[1] <= sevenSeg:H5.seg
HEX5[2] <= sevenSeg:H5.seg
HEX5[3] <= sevenSeg:H5.seg
HEX5[4] <= sevenSeg:H5.seg
HEX5[5] <= sevenSeg:H5.seg
HEX5[6] <= sevenSeg:H5.seg
HEX5[7] <= sevenSeg:H5.seg
LEDR[0] <= ledValue.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>


|top|counter:C0
clock => sC10[0]~reg0.CLK
clock => sC10[1]~reg0.CLK
clock => sC10[2]~reg0.CLK
clock => sC10[3]~reg0.CLK
clock => c10[0]~reg0.CLK
clock => c10[1]~reg0.CLK
clock => c10[2]~reg0.CLK
clock => c10[3]~reg0.CLK
clock => c1[0]~reg0.CLK
clock => c1[1]~reg0.CLK
clock => c1[2]~reg0.CLK
clock => c1[3]~reg0.CLK
reset_n => sC10[0]~reg0.PRESET
reset_n => sC10[1]~reg0.PRESET
reset_n => sC10[2]~reg0.PRESET
reset_n => sC10[3]~reg0.PRESET
reset_n => c10[0]~reg0.ACLR
reset_n => c10[1]~reg0.ACLR
reset_n => c10[2]~reg0.ACLR
reset_n => c10[3]~reg0.ACLR
reset_n => c1[0]~reg0.PRESET
reset_n => c1[1]~reg0.ACLR
reset_n => c1[2]~reg0.ACLR
reset_n => c1[3]~reg0.ACLR
c10[0] <= c10[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c10[1] <= c10[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c10[2] <= c10[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c10[3] <= c10[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c1[0] <= c1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c1[1] <= c1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c1[2] <= c1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
c1[3] <= c1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sC10[0] <= sC10[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sC10[1] <= sC10[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sC10[2] <= sC10[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sC10[3] <= sC10[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|calendar:Cal0
clock => ~NO_FANOUT~
reset_n => hd10[0]~reg0.CLK
reset_n => hd10[1]~reg0.CLK
reset_n => hd10[2]~reg0.CLK
reset_n => hd10[3]~reg0.CLK
reset_n => hd1[0]~reg0.CLK
reset_n => hd1[1]~reg0.CLK
reset_n => hd1[2]~reg0.CLK
reset_n => hd1[3]~reg0.CLK
reset_n => hm[0]~reg0.CLK
reset_n => hm[1]~reg0.CLK
reset_n => hm[2]~reg0.CLK
reset_n => hm[3]~reg0.CLK
SW9 => Add2.IN0
c10[0] => Add0.IN8
c10[0] => Add1.IN11
c10[1] => Add0.IN7
c10[1] => Add1.IN10
c10[2] => Add0.IN5
c10[2] => Add0.IN6
c10[3] => Add0.IN3
c10[3] => Add0.IN4
c1[0] => LessThan0.IN14
c1[0] => LessThan1.IN14
c1[0] => Equal0.IN0
c1[0] => Equal1.IN31
c1[1] => Add1.IN14
c1[2] => Add1.IN13
c1[3] => Add1.IN12
hm[0] <= hm[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hm[1] <= hm[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hm[2] <= hm[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hm[3] <= hm[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd10[0] <= hd10[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd10[1] <= hd10[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd10[2] <= hd10[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd10[3] <= hd10[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd1[0] <= hd1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd1[1] <= hd1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd1[2] <= hd1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hd1[3] <= hd1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|sevenSeg:H0
val[0] => Decoder0.IN3
val[1] => Decoder0.IN2
val[2] => Decoder0.IN1
val[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>
seg1[0] <= <GND>
seg1[1] <= <GND>
seg1[2] <= <GND>
seg1[3] <= <GND>
seg1[4] <= <GND>
seg1[5] <= <GND>
seg1[6] <= <GND>
seg1[7] <= <GND>


|top|sevenSeg:H1
val[0] => Decoder0.IN3
val[1] => Decoder0.IN2
val[2] => Decoder0.IN1
val[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>
seg1[0] <= <GND>
seg1[1] <= <GND>
seg1[2] <= <GND>
seg1[3] <= <GND>
seg1[4] <= <GND>
seg1[5] <= <GND>
seg1[6] <= <GND>
seg1[7] <= <GND>


|top|sevenSeg:H2
val[0] => Decoder0.IN3
val[1] => Decoder0.IN2
val[2] => Decoder0.IN1
val[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>
seg1[0] <= <GND>
seg1[1] <= <GND>
seg1[2] <= <GND>
seg1[3] <= <GND>
seg1[4] <= <GND>
seg1[5] <= <GND>
seg1[6] <= <GND>
seg1[7] <= <GND>


|top|sevenSeg:H4
val[0] => Decoder0.IN3
val[1] => Decoder0.IN2
val[2] => Decoder0.IN1
val[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>
seg1[0] <= <GND>
seg1[1] <= <GND>
seg1[2] <= <GND>
seg1[3] <= <GND>
seg1[4] <= <GND>
seg1[5] <= <GND>
seg1[6] <= <GND>
seg1[7] <= <GND>


|top|sevenSeg:H5
val[0] => Decoder0.IN3
val[1] => Decoder0.IN2
val[2] => Decoder0.IN1
val[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>
seg1[0] <= <GND>
seg1[1] <= <GND>
seg1[2] <= <GND>
seg1[3] <= <GND>
seg1[4] <= <GND>
seg1[5] <= <GND>
seg1[6] <= <GND>
seg1[7] <= <GND>


|top|clockDivider:U0
clock_in => clock_divider[0].CLK
clock_in => clock_divider[1].CLK
clock_in => clock_divider[2].CLK
clock_in => clock_divider[3].CLK
clock_in => clock_divider[4].CLK
clock_in => clock_divider[5].CLK
clock_in => clock_divider[6].CLK
clock_in => clock_divider[7].CLK
clock_in => clock_divider[8].CLK
clock_in => clock_divider[9].CLK
clock_in => clock_divider[10].CLK
clock_in => clock_divider[11].CLK
clock_in => clock_divider[12].CLK
clock_in => clock_divider[13].CLK
clock_in => clock_divider[14].CLK
clock_in => clock_divider[15].CLK
clock_in => clock_divider[16].CLK
clock_in => clock_divider[17].CLK
clock_in => clock_divider[18].CLK
clock_in => clock_divider[19].CLK
clock_in => clock_divider[20].CLK
clock_in => clock_divider[21].CLK
clock_in => clock_divider[22].CLK
clock_in => clock_out~reg0.CLK
reset_n => clock_divider[0].ACLR
reset_n => clock_divider[1].ACLR
reset_n => clock_divider[2].ACLR
reset_n => clock_divider[3].ACLR
reset_n => clock_divider[4].ACLR
reset_n => clock_divider[5].ACLR
reset_n => clock_divider[6].ACLR
reset_n => clock_divider[7].ACLR
reset_n => clock_divider[8].ACLR
reset_n => clock_divider[9].ACLR
reset_n => clock_divider[10].ACLR
reset_n => clock_divider[11].ACLR
reset_n => clock_divider[12].ACLR
reset_n => clock_divider[13].ACLR
reset_n => clock_divider[14].ACLR
reset_n => clock_divider[15].ACLR
reset_n => clock_divider[16].ACLR
reset_n => clock_divider[17].ACLR
reset_n => clock_divider[18].ACLR
reset_n => clock_divider[19].ACLR
reset_n => clock_divider[20].ACLR
reset_n => clock_divider[21].ACLR
reset_n => clock_divider[22].ACLR
reset_n => clock_out~reg0.ACLR
divide_by[0] => Add0.IN64
divide_by[1] => Add0.IN63
divide_by[2] => Add0.IN62
divide_by[3] => Add0.IN61
divide_by[4] => Add0.IN60
divide_by[5] => Add0.IN59
divide_by[6] => Add0.IN58
divide_by[7] => Add0.IN57
divide_by[8] => Add0.IN56
divide_by[9] => Add0.IN55
divide_by[10] => Add0.IN54
divide_by[11] => Add0.IN53
divide_by[12] => Add0.IN52
divide_by[13] => Add0.IN51
divide_by[14] => Add0.IN50
divide_by[15] => Add0.IN49
divide_by[16] => Add0.IN48
divide_by[17] => Add0.IN47
divide_by[18] => Add0.IN46
divide_by[19] => Add0.IN45
divide_by[20] => Add0.IN44
divide_by[21] => Add0.IN43
divide_by[22] => Add0.IN42
divide_by[23] => Add0.IN41
divide_by[24] => Add0.IN40
divide_by[25] => Add0.IN39
divide_by[26] => Add0.IN38
divide_by[27] => Add0.IN37
divide_by[28] => Add0.IN36
divide_by[29] => Add0.IN35
divide_by[30] => Add0.IN34
divide_by[31] => Add0.IN33
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


