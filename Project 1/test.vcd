$date
	Thu Feb 20 09:39:24 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb1 $end
$var wire 10 ! testLED [9:0] $end
$var wire 8 " testHEX5 [7:0] $end
$var wire 8 # testHEX4 [7:0] $end
$var wire 8 $ testHEX3 [7:0] $end
$var wire 8 % testHEX2 [7:0] $end
$var wire 8 & testHEX1 [7:0] $end
$var wire 8 ' testHEX0 [7:0] $end
$var reg 2 ( testKEY [1:0] $end
$var reg 10 ) testSW [9:0] $end
$scope module DUT $end
$var wire 2 * key [1:0] $end
$var wire 10 + leds [9:0] $end
$var wire 10 , switch [9:0] $end
$var wire 8 - hex5 [7:0] $end
$var wire 8 . hex4 [7:0] $end
$var wire 8 / hex3 [7:0] $end
$var wire 8 0 hex2 [7:0] $end
$var wire 8 1 hex1 [7:0] $end
$var wire 8 2 hex0 [7:0] $end
$var reg 10 3 leds1 [9:0] $end
$var reg 4 4 seg2 [3:0] $end
$scope module S0 $end
$var wire 4 5 val [3:0] $end
$var reg 8 6 seg [7:0] $end
$upscope $end
$scope module S1 $end
$var wire 4 7 val [3:0] $end
$var reg 8 8 seg [7:0] $end
$upscope $end
$scope module S2 $end
$var wire 4 9 val [3:0] $end
$var reg 8 : seg [7:0] $end
$upscope $end
$scope module S3 $end
$var wire 4 ; val [3:0] $end
$var reg 8 < seg [7:0] $end
$upscope $end
$scope module S4 $end
$var wire 4 = val [3:0] $end
$var reg 8 > seg [7:0] $end
$upscope $end
$scope module S5 $end
$var wire 4 ? val [3:0] $end
$var reg 8 @ seg [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb2 $end
$var wire 10 A testLED [9:0] $end
$var wire 8 B testHEX5 [7:0] $end
$var wire 8 C testHEX4 [7:0] $end
$var wire 8 D testHEX3 [7:0] $end
$var wire 8 E testHEX2 [7:0] $end
$var wire 8 F testHEX1 [7:0] $end
$var wire 8 G testHEX0 [7:0] $end
$var reg 10 H testSW [9:0] $end
$scope module DUT $end
$var wire 10 I leds [9:0] $end
$var wire 10 J switch [9:0] $end
$var wire 8 K hex4 [7:0] $end
$var wire 8 L hex0 [7:0] $end
$var reg 8 M hex1 [7:0] $end
$var reg 8 N hex2 [7:0] $end
$var reg 8 O hex3 [7:0] $end
$var reg 8 P hex5 [7:0] $end
$var reg 10 Q leds2 [9:0] $end
$scope module U0 $end
$var wire 4 R val [3:0] $end
$var reg 8 S seg [7:0] $end
$upscope $end
$scope module U1 $end
$var wire 4 T val [3:0] $end
$var reg 8 U seg [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module tbtop $end
$var wire 10 V testLED [9:0] $end
$var wire 8 W testHEX5 [7:0] $end
$var wire 8 X testHEX4 [7:0] $end
$var wire 8 Y testHEX3 [7:0] $end
$var wire 8 Z testHEX2 [7:0] $end
$var wire 8 [ testHEX1 [7:0] $end
$var wire 8 \ testHEX0 [7:0] $end
$var reg 2 ] testKEY [1:0] $end
$var reg 10 ^ testSW [9:0] $end
$scope module DUT $end
$var wire 2 _ KEY [1:0] $end
$var wire 10 ` SW [9:0] $end
$var wire 10 a ledsb [9:0] $end
$var wire 10 b ledsa [9:0] $end
$var wire 8 c hex5b [7:0] $end
$var wire 8 d hex5a [7:0] $end
$var wire 8 e hex4b [7:0] $end
$var wire 8 f hex4a [7:0] $end
$var wire 8 g hex3b [7:0] $end
$var wire 8 h hex3a [7:0] $end
$var wire 8 i hex2b [7:0] $end
$var wire 8 j hex2a [7:0] $end
$var wire 8 k hex1b [7:0] $end
$var wire 8 l hex1a [7:0] $end
$var wire 8 m hex0b [7:0] $end
$var wire 8 n hex0a [7:0] $end
$var reg 8 o HEX0 [7:0] $end
$var reg 8 p HEX1 [7:0] $end
$var reg 8 q HEX2 [7:0] $end
$var reg 8 r HEX3 [7:0] $end
$var reg 8 s HEX4 [7:0] $end
$var reg 8 t HEX5 [7:0] $end
$var reg 10 u LEDR [9:0] $end
$scope module U0 $end
$var wire 2 v key [1:0] $end
$var wire 10 w leds [9:0] $end
$var wire 10 x switch [9:0] $end
$var wire 8 y hex5 [7:0] $end
$var wire 8 z hex4 [7:0] $end
$var wire 8 { hex3 [7:0] $end
$var wire 8 | hex2 [7:0] $end
$var wire 8 } hex1 [7:0] $end
$var wire 8 ~ hex0 [7:0] $end
$var reg 10 !" leds1 [9:0] $end
$var reg 4 "" seg2 [3:0] $end
$scope module S0 $end
$var wire 4 #" val [3:0] $end
$var reg 8 $" seg [7:0] $end
$upscope $end
$scope module S1 $end
$var wire 4 %" val [3:0] $end
$var reg 8 &" seg [7:0] $end
$upscope $end
$scope module S2 $end
$var wire 4 '" val [3:0] $end
$var reg 8 (" seg [7:0] $end
$upscope $end
$scope module S3 $end
$var wire 4 )" val [3:0] $end
$var reg 8 *" seg [7:0] $end
$upscope $end
$scope module S4 $end
$var wire 4 +" val [3:0] $end
$var reg 8 ," seg [7:0] $end
$upscope $end
$scope module S5 $end
$var wire 4 -" val [3:0] $end
$var reg 8 ." seg [7:0] $end
$upscope $end
$upscope $end
$scope module U1 $end
$var wire 10 /" leds [9:0] $end
$var wire 10 0" switch [9:0] $end
$var wire 8 1" hex4 [7:0] $end
$var wire 8 2" hex0 [7:0] $end
$var reg 8 3" hex1 [7:0] $end
$var reg 8 4" hex2 [7:0] $end
$var reg 8 5" hex3 [7:0] $end
$var reg 8 6" hex5 [7:0] $end
$var reg 10 7" leds2 [9:0] $end
$scope module U0 $end
$var wire 4 8" val [3:0] $end
$var reg 8 9" seg [7:0] $end
$upscope $end
$scope module U1 $end
$var wire 4 :" val [3:0] $end
$var reg 8 ;" seg [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb1 $end
$scope module DUT $end
$scope module S0 $end
$upscope $end
$scope module S1 $end
$upscope $end
$scope module S2 $end
$upscope $end
$scope module S3 $end
$upscope $end
$scope module S4 $end
$upscope $end
$scope module S5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb2 $end
$scope module DUT $end
$scope module U0 $end
$upscope $end
$scope module U1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module tbtop $end
$scope module DUT $end
$scope module U0 $end
$scope module S0 $end
$upscope $end
$scope module S1 $end
$upscope $end
$scope module S2 $end
$upscope $end
$scope module S3 $end
$upscope $end
$scope module S4 $end
$upscope $end
$scope module S5 $end
$upscope $end
$upscope $end
$scope module U1 $end
$scope module U0 $end
$upscope $end
$scope module U1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb1 $end
$scope module DUT $end
$scope module S0 $end
$upscope $end
$scope module S1 $end
$upscope $end
$scope module S2 $end
$upscope $end
$scope module S3 $end
$upscope $end
$scope module S4 $end
$upscope $end
$scope module S5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb2 $end
$scope module DUT $end
$scope module U0 $end
$upscope $end
$scope module U1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module tbtop $end
$scope module DUT $end
$scope module U0 $end
$scope module S0 $end
$upscope $end
$scope module S1 $end
$upscope $end
$scope module S2 $end
$upscope $end
$scope module S3 $end
$upscope $end
$scope module S4 $end
$upscope $end
$scope module S5 $end
$upscope $end
$upscope $end
$scope module U1 $end
$scope module U0 $end
$upscope $end
$scope module U1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11000000 ;"
b0 :"
b11000000 9"
b0 8"
b100 7"
b10000110 6"
b11111111 5"
b11111111 4"
b10000110 3"
b11000000 2"
b11000000 1"
b0 0"
b100 /"
b11000000 ."
b0 -"
b10000000 ,"
b1000 +"
b10100100 *"
b10 )"
b10011001 ("
b100 '"
b11000000 &"
b0 %"
b11111001 $"
b1 #"
b100 ""
b0 !"
b11111001 ~
b11000000 }
b10011001 |
b10100100 {
b10000000 z
b11000000 y
b0 x
b0 w
b0 v
b0 u
b11000000 t
b10000000 s
b10100100 r
b10110000 q
b11000000 p
b11111001 o
b11111001 n
b11000000 m
b11000000 l
b10000110 k
b10011001 j
b11111111 i
b10100100 h
b11111111 g
b10000000 f
b11000000 e
b11000000 d
b10000110 c
b0 b
b100 a
b0 `
b0 _
b0 ^
b0 ]
b11111001 \
b11000000 [
b10110000 Z
b10100100 Y
b10000000 X
b11000000 W
b0 V
b11000000 U
b0 T
b11000000 S
b0 R
b100 Q
b10000110 P
b11111111 O
b11111111 N
b10000110 M
b11000000 L
b11000000 K
b0 J
b100 I
b0 H
b11000000 G
b10000110 F
b11111111 E
b11111111 D
b11000000 C
b10000110 B
b100 A
b11000000 @
b0 ?
b10000000 >
b1000 =
b10100100 <
b10 ;
b10011001 :
b100 9
b11000000 8
b0 7
b11111001 6
b1 5
b100 4
b0 3
b11111001 2
b11000000 1
b10011001 0
b10100100 /
b10000000 .
b11000000 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b11111001 '
b11000000 &
b10011001 %
b10100100 $
b10000000 #
b11000000 "
b0 !
$end
#100
b10110000 %
b10110000 0
b10110000 :
b10000110 W
b10000110 t
b11000000 X
b11000000 s
b11111111 Y
b11111111 r
b11111111 Z
b11111111 q
b10000110 [
b10000110 p
b11000000 \
b11000000 o
b100 V
b100 u
b11111001 G
b11111001 L
b11111001 S
b11000111 B
b11000111 P
b11111111 F
b11111111 M
b1 A
b1 I
b1 Q
b11 4
b11 9
b1 R
b1000000000 ^
b1000000000 `
b1000000000 x
b1000000000 0"
b1 H
b1 J
b10 (
b10 *
#200
b10011001 %
b10011001 0
b10011001 :
b11000000 W
b11000000 t
b10000000 X
b10000000 s
b10100100 Y
b10100100 r
b10011001 Z
b10011001 q
b11000000 [
b11000000 p
b11111001 \
b11111001 o
b0 V
b0 u
b11111001 C
b11111001 K
b11111001 U
b10000110 B
b10000110 P
b10000110 F
b10000110 M
b100 A
b100 I
b100 Q
b100 4
b100 9
b1 T
b0 ^
b0 `
b0 x
b0 0"
b10001 H
b10001 J
b0 (
b0 *
#300
b11000000 G
b11000000 L
b11000000 S
b11111111 B
b11111111 P
b11000111 F
b11000111 M
b10 A
b10 I
b10 Q
b11111111 !
b11111111 +
b11111111 3
b0 R
b10000 H
b10000 J
b1 (
b1 *
